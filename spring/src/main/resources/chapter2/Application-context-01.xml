<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="
	       http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		   http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <!--Bean的命名方式，方式很多种，常用的还是使用id的 -->

    <!--方式1：不指定id，只配置必须的全限定类名，由IoC容器为其生成一个标识，客户端必须通过接口“T getBean(Class<T> requiredType)”获取Bean；-->
    <bean class="com.javaconfig.spring.chapter2.HelloInChinese" />

    <!--方式2：指定id，必须在Ioc容器中唯一 -->
    <bean id="helloApi2" class="com.javaconfig.spring.chapter2.HelloInEnglish" ></bean>

    <!--方式3：指定name，这样name就是“标识符”，必须在Ioc容器中唯一 -->
    <bean name="helloApi3" class="com.javaconfig.spring.chapter2.HelloInEnglish" />

    <!--方式4：指定id和name，id就是标识符，而name就是别名，必须在Ioc容器中唯一 , 如果id和name一样，IoC容器能检测到，并消除冲突 -->
    <bean id="helloApi4" name="helloApi4" class="com.javaconfig.spring.chapter2.HelloInEnglish"/>

    <!--方式5：指定多个name，多个name用“，”、“；”、“ ”分割，第一个被用作标识符，其他的（alias1、alias2、alias3）是别名，所有标识符也必须在Ioc容器中唯一  -->
    <bean id="helloApi5" name="b5 b6,b7;b8" class="com.javaconfig.spring.chapter2.HelloInEnglish"/>

    <!--方式6： 使用<alias>标签指定别名，别名也必须在IoC容器中唯一 -->
    <alias alias="alias1" name="helloApi2"/>
    <alias alias="alias2" name="helloApi2"/>

 </beans>